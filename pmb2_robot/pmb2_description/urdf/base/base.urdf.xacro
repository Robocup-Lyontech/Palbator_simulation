<?xml version="1.0"?>
<!--

  Copyright (c) 2011-2014, PAL Robotics, S.L.
  All rights reserved.

  This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/3.0/ or send a letter to
  Creative Commons, 444 Castro Street, Suite 900, Mountain View, California, 94041, USA.
-->
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  
  <!-- Palbator arm -->
  <xacro:include filename="$(find pmb2_description)/urdf/arm/palbator_arm_with_gripper.urdf.xacro"/>
  <!-- <xacro:include filename="$(find pmb2_description)/urdf/arm/palbator_arm.urdf.xacro"/>-->


  <xacro:include filename="$(find pmb2_description)/urdf/deg_to_rad.xacro"/>

  <xacro:include filename="$(find pmb2_description)/urdf/wheels/wheel.urdf.xacro"/>
  <xacro:include filename="$(find pmb2_description)/urdf/wheels/caster.urdf.xacro"/>

  <xacro:include filename="$(find pmb2_description)/urdf/sensors/imu.urdf.xacro"/>

  <xacro:include filename="$(find pmb2_description)/urdf/objects/cover.urdf.xacro"/>
  <xacro:include filename="$(find pmb2_description)/urdf/objects/antenna.urdf.xacro"/>

  <!-- Wheel characteristics -->
  <xacro:property name="wheel_radius"     value="0.0985"/>
  <xacro:property name="wheel_width"      value="0.040"/>
  <xacro:property name="wheel_separation" value="0.4044"/>
  <xacro:property name="wheel_torque"     value="6.0"/>
  <xacro:property name="wheel_velocity"   value="1.0"/>

  <!-- Caster wheel characteristics -->
  <xacro:property name="caster_radius"       value="0.025"/>
  <xacro:property name="caster_width"        value="0.015"/>
  <xacro:property name="caster_separation_x" value="0.343"/>
  <xacro:property name="caster_separation_y" value="0.204"/>
  <xacro:property name="caster_offset_x"     value="-0.002"/>
  <xacro:property name="caster_offset_y"     value="0.0"/>
  <xacro:property name="caster_offset_z"     value="-0.0335"/>

  <xacro:macro name="base" params="name">

    <!-- Base -->
    <link name="${name}_link">
      <inertial>
        <origin xyz="-0.00000106 0.00000109 0.0000387" rpy="0 0 0"/>
        <mass value="28.26649"/>
        <inertia ixx="0.465408937" ixy="0.002160024" ixz="-0.001760255"
                 iyy="0.483193291" iyz="-0.000655952"
                 izz="0.550939703"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://pmb2_description/meshes/base/base.stl" />
        </geometry>
        <material name="White" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://pmb2_description/meshes/base/high_resolution/base_collision.stl" />
        </geometry>
        <material name="White" />
      </collision>
    </link>
    <gazebo reference="${name}_link">
      <material>Gazebo/White</material>
    </gazebo>

    <!-- Base footprint -->
    <link name="${name}_footprint"/>

    <joint name="${name}_footprint_joint" type="fixed">
      <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0" />
      <child link="${name}_link" />
      <parent link="${name}_footprint"/>
    </joint>

  <!-- gazebo parameters are given here for base_link thru base_footprint -->
    <gazebo reference="${name}_footprint">
      <kp>100000000.0</kp>
      <kd>10.0</kd>
      <mu1>0.1</mu1>
      <mu2>0.1</mu2>
      <fdir1>1 0 0</fdir1>
      <maxVel>10.0</maxVel>
      <minDepth>0.0005</minDepth>
      <laserRetro>0</laserRetro>
    </gazebo>

    <!-- Orange cover & antennas -->
    <xacro:cover name="${name}_cover" parent="${name}_footprint"/>
    <xacro:antenna name="${name}_antenna_left" parent="${name}_link">
      <origin xyz="-0.201 0.1062 0.195" rpy="0 0 0"/>
    </xacro:antenna>
    <xacro:antenna name="${name}_antenna_right" parent="${name}_link">
      <origin xyz="-0.201 -0.1062 0.195" rpy="0 0 0"/>
    </xacro:antenna>

    <!-- IMU -->
    <!-- @todo pmb2_hardware_gazebo needs an IMU!  -->
    <xacro:imu_sensor name="${name}_imu" parent="${name}_link" update_rate="100.0">
      <origin xyz="0.10171 0 0.11282" rpy="0 0 ${-90 * deg_to_rad}"/>
    </xacro:imu_sensor>

    <!-- Wheels -->
    <xacro:wheel side="right" reflect=" 1.0" radius="${wheel_radius}" width="${wheel_width}" torque="${wheel_torque}" velocity="${wheel_velocity}" separation="${wheel_separation}" parent="${name}"/>
    <xacro:wheel side="left"  reflect="-1.0" radius="${wheel_radius}" width="${wheel_width}" torque="${wheel_torque}" velocity="${wheel_velocity}" separation="${wheel_separation}" parent="${name}"/>

    <!-- Casters wheels -->
    <xacro:caster side="front_right" radius="${caster_radius}" width="${caster_width}" separation_x="${ caster_separation_x}" separation_y="${ caster_separation_y}" offset_x="${caster_offset_x}" offset_y="${caster_offset_y}" offset_z="${caster_offset_z}" parent="${name}"/>
    <xacro:caster side="front_left"  radius="${caster_radius}" width="${caster_width}" separation_x="${ caster_separation_x}" separation_y="${-caster_separation_y}" offset_x="${caster_offset_x}" offset_y="${caster_offset_y}" offset_z="${caster_offset_z}" parent="${name}"/>

    <xacro:caster side="back_right"  radius="${caster_radius}" width="${caster_width}" separation_x="${-caster_separation_x}" separation_y="${ caster_separation_y}" offset_x="${caster_offset_x}" offset_y="${caster_offset_y}" offset_z="${caster_offset_z}" parent="${name}"/>
    <xacro:caster side="back_left"   radius="${caster_radius}" width="${caster_width}" separation_x="${-caster_separation_x}" separation_y="${-caster_separation_y}" offset_x="${caster_offset_x}" offset_y="${caster_offset_y}" offset_z="${caster_offset_z}" parent="${name}"/>


    <!-- Palbator arm -->
    <xacro:palbator_arm parent="${name}_link" />

    <!-- Base Camera-->
    <link name="palbator_base_camera_link" >
      <inertial>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <mass value="0.1"/>
          <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
      </inertial>
        <visual>
            <geometry>
              <box size="0.03 0.18 0.02"/>
          </geometry>
          <material name="Black">
            <color rgba="0 0 0 1.0"/>
          </material>
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </visual>
    </link>

    <!-- Battery pack-->
    <link name="palbator_base_battery_link" >
      <inertial>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <mass value="20"/>
          <inertia ixx="0.142" ixy="0.217" ixz="0.188" iyy="0.142" iyz="0.104" izz="0.142"/>
      </inertial>
        <visual>
            <geometry>
              <box size="0.28 0.14 0.15"/>
          </geometry>
          <material name="Blue">
            <color rgba="0 0 1 1.0"/>
          </material>
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </visual>
    </link>    

     <!-- JOINTS -->

    <joint name="palbator_base_camera_joint" type="fixed">
      <parent link="${name}_link"/>
      <child link="palbator_base_camera_link"/>
      <origin xyz="0.245 0.0 0.215" rpy="0 0.75 0.0" />
      <axis xyz="0 0 0" />
    </joint>

      <joint name="palbator_base_battery_joint" type="fixed">
      <parent link="${name}_link"/>
      <child link="palbator_base_battery_link"/>
      <origin xyz="0.0 0.0 0.025" rpy="0 0.0 0.0" />
      <axis xyz="0 0 0" />
    </joint>

    <!-- Empty camera joint for fixing wrong depth sensor orientation -->

    <joint name="camera_depth_joint_2" type="fixed">
      <origin xyz="0 0 0" rpy="${-PI/2} 0 ${-PI/2} "/>
      <parent link="palbator_base_camera_link"/>
      <child link="camera_depth_link_2"/>
    </joint>

    <link name="camera_depth_link_2"></link>


    <!-- GAZEBO MATERIALS -->
    <gazebo reference="palbator_base_camera_link">
      <material>Gazebo/Black</material>
    </gazebo>

    <!-- GAZEBO PLUGINS -->

    <gazebo reference="palbator_base_camera_link">
    <sensor name="palbator_base_camera_link_camera" type="depth">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.570797</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>5.0</far>
        </clip>
      </camera>
    
      <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>20.0</updateRate>
        <cameraName>camera_ir_base</cameraName>
        <imageTopicName>/camera_base/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/camera_base/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/camera_base/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>/camera_base/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>/camera_base/depth/points</pointCloudTopicName>
        <frameName>camera_depth_link_2</frameName>
        <pointCloudCutoff>0.225</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
    </gazebo>
    
  </xacro:macro>

</robot>
